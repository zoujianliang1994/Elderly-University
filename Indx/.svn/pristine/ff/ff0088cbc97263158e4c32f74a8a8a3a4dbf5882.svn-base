package com.zhimu.controller.manager.stu.leave;

import com.zhimu.commons.constant.Const;
import com.zhimu.commons.utils.*;
import com.zhimu.controller.manager.base.BaseController;
import com.zhimu.dao.entity.system.Page;
import com.zhimu.dao.entity.system.User;
import com.zhimu.service.manager.edu.school.SchoolService;
import com.zhimu.service.manager.edu.teacher.impl.TeacherService;
import com.zhimu.service.manager.stu.leave.LeaveManager;
import net.sf.json.JSONArray;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping(value = "/student_leave")
public class LeaveController extends BaseController {

  @Resource(name = "leaveService")
  private LeaveManager leaveService;


  /**
   * 个人请假列表
   * @param page
   * @return
   * @throws Exception
   */
  @RequestMapping(value = "/list")
  public ModelAndView list(Page page) throws Exception {
    ModelAndView mv = this.getModelAndView();
    PageData pd = getPageData();
    try {
      String keywords = pd.getString("keywords"); // 检索条件
      if (null != keywords && !"".equals(keywords)) {
        pd.put("keywords", keywords.trim());
      }
      //获取当前登陆用户的id作为查询条件
      pd.put("createBy", this.getUserInfo().getUSERNAME());
      page.setPd(pd);
      List<PageData> varList = leaveService.listPage(page);
      mv.setViewName("stu/leave/leave_list");
      mv.addObject("leaveList", varList);
      mv.addObject("pd", pd);
    } catch (Exception e) {
      logger.error(ErrorUtils.getErrorMessage(e, "查询学生个人请假列表异常!"));
    }
    return mv;
  }

  /**
   * 去请假新增页面
   * @return
   * @throws Exception
   */
  @RequestMapping(value = "/goAdd")
  public ModelAndView goAdd() throws Exception {
    ModelAndView mv = this.getModelAndView();
    PageData pd = getPageData();
    // 获取当前用户所属的学校集合
    User user = this.getUserInfo();
    String[] schIds = user.getSchoolId().split(","); // 学校id
    String[] schNames = user.getSchoolName().split(","); // 学校名字
    pd.put("schIds", schIds);
    pd.put("schNames", schNames);

    mv.addObject("pd", pd);
    mv.addObject("msg", "save");
    mv.setViewName("stu/leave/leave_edit");
    return mv;
  }

  /**
   * 保存教师
   */
  // @RequestMapping(value = "/save", method = RequestMethod.POST)
  // @ResponseBody
  // public Object save(@RequestParam(value = "file1", required = false) MultipartFile file1, HttpServletRequest request) {
  //   Map<String, String> map = new HashMap<>();
  //   String msg;
  //   try {
  //     PageData pd = returnPageData(request);
  //     pd.put("idcard", pd.getString("idcard").replace(" ", ""));
  //     pd.put("school_id", getUserInfo().getSchoolId().split(",")[0]);
  //     //通过身份证+学校去查询老师是否重复添加
  //     if (getReptTeacherListSize(pd) == 0) {
  //       pd.put("id", this.get32UUID());
  //       //照片
  //       if (file1 != null && !file1.isEmpty()) {
  //         String photo_url = FileUpload.fileUp(file1, filePath, get32UUID());
  //         pd.put("photo_url", photo_url);
  //       }
  //       // 执行保存
  //       teacherService.addData(pd);
  //       msg = "success";
  //     } else {
  //       msg = "fail";
  //     }
  //   } catch (Exception e) {
  //     msg = "error";
  //     logger.error(ErrorUtils.getErrorMessage(e, "保存教师信息异常!"));
  //   }
  //   map.put("result", msg);
  //   return AppUtil.returnObject(new PageData(), map);
  // }
  //
  // /**
  //  * 去修改教师页面
  //  */
  // @RequestMapping(value = "/goEditU")
  // public ModelAndView goEditU() {
  //   ModelAndView mv = this.getModelAndView();
  //   PageData pd = getPageData();
  //   try {
  //     String type = pd.getString("type");
  //     String currentPage = pd.getString("currentPage");
  //     pd = teacherService.findDataById(pd);
  //     pd.put("type", type);
  //     pd.put("currentPage", currentPage);
  //     mv.addObject("msg", "editU");
  //     mv.addObject("pd", pd);
  //     mv.setViewName("edu/teacher/teacher_edit");
  //   } catch (Exception e) {
  //     logger.error(ErrorUtils.getErrorMessage(e, "去修改教师页面异常!"));
  //   }
  //   return mv;
  // }
  //
  // /**
  //  * 修改教师
  //  */
  // @RequestMapping(value = "/editU", method = RequestMethod.POST)
  // @ResponseBody
  // public Object editU(@RequestParam(value = "file1", required = false) MultipartFile file1, HttpServletRequest request) {
  //   Map<String, String> map = new HashMap<>();
  //   String msg;
  //   try {
  //     PageData pd = returnPageData(request);
  //     String idcard = pd.getString("idcard").replace(" ", "");
  //     String old_idcard = pd.getString("old_idcard").replace(" ", "");
  //     pd.put(idcard, idcard);
  //     if (idcard.equals(old_idcard) || (!idcard.equals(old_idcard) && getReptTeacherListSize(pd) == 0)) {
  //       //照片
  //       if (file1 != null && !file1.isEmpty()) {
  //         String photo_url = FileUpload.fileUp(file1, filePath, get32UUID());
  //         pd.put("photo_url", photo_url);
  //       }
  //       // 执行保存
  //       teacherService.editData(pd);
  //       msg = "success";
  //     } else {
  //       msg = "fail";
  //     }
  //   } catch (Exception e) {
  //     msg = "error";
  //     logger.error(ErrorUtils.getErrorMessage(e, "修改教师异常!"));
  //   }
  //   map.put("result", msg);
  //   return AppUtil.returnObject(new PageData(), map);
  // }
  //
  // /**
  //  * 删除教师
  //  */
  // @RequestMapping(value = "/deleteU")
  // @ResponseBody
  // public Object delete() {
  //   Map<String, String> map = new HashMap<>();
  //   PageData pd = getPageData();
  //   String resultInfo;
  //   try {
  //     teacherService.deleteData(pd);
  //     resultInfo = "success";
  //   } catch (Exception e) {
  //     resultInfo = "error";
  //     logger.error(ErrorUtils.getErrorMessage(e, "删除教师异常!"));
  //   }
  //   map.put("result", resultInfo);
  //   return AppUtil.returnObject(new PageData(), map);
  // }
  //
  //
  // private int getReptTeacherListSize(PageData pd) throws Exception {
  //   return teacherService.selectList(pd).size();
  // }
  //
  // /**
  //  * 根据所选的学校id获取学校所有老师数据
  //  * @return
  //  */
  // @RequestMapping(value = "/findBySchoolId")
  // @ResponseBody
  // public Object findBySchoolId() {
  //   Map<String, String> map = new HashMap<String, String>();
  //   PageData pd = this.getPageData();
  //   JSONArray arr = null;
  //   String json = "";
  //   List<PageData> teachers = null;
  //   try {
  //     String schoolIds = pd.getString("schoolIds");
  //     if (StringUtils.isNotBlank(schoolIds)){ // 获取前台传过来的学校id得到所有老师
  //       teachers = teacherService.findBySchools(schoolIds);
  //     }else { // 如果没有传则拿到当前登录用户的所属学校及分校区的所有老师
  //       String schoolId = this.getUserInfo().getSchoolId();
  //       PageData pageData = new PageData();
  //       pageData.put("id", schoolId);
  //       PageData school = schoolService.findById(pageData);
  //       schoolIds = schoolId;
  //
  //       String type = school.getString("type");
  //       // 如果学校类型为空则寻找它的分校区
  //       if (type.isEmpty()) {
  //         List<PageData> subSchools = schoolService.listSubSchools(schoolId);
  //         for (int i = 0; i < subSchools.size()-1 ; i++) {
  //           if (i == subSchools.size()-1){
  //             schoolIds += subSchools.get(i).getString("id");
  //           }else {
  //             schoolIds += subSchools.get(i).getString("id") + ",";
  //           }
  //         }
  //       }
  //       teachers = teacherService.findBySchools(schoolIds);
  //     }
  //     arr = JSONArray.fromObject(teachers);
  //     json = arr.toString();
  //     map.put("data", json);
  //
  //   } catch (Exception e) {
  //     logger.error(ErrorUtils.getErrorMessage(e, "获取所选学校的老师异常__lwc"));
  //   }
  //   return map;
  // }

}
