package com.zhimu.controller.manager.edu.activityGroup;

import com.zhimu.commons.constant.Const;
import com.zhimu.commons.utils.*;
import com.zhimu.controller.manager.base.BaseController;
import com.zhimu.dao.entity.system.Page;
import com.zhimu.dao.utils.Jurisdiction;
import com.zhimu.service.manager.edu.activity.ActivityManager;
import com.zhimu.service.manager.edu.activityGroup.ActivityGroupService;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 活动参与人员控制层__lwc
 */
@Controller
@RequestMapping(value = "/activityGroup")
public class ActivityGroupController extends BaseController {


    @Resource(name = "activityGroupService")
    ActivityGroupService activityGroupService;

    /**
     * 进入列表
     *
     * @param page
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/list")
    public ModelAndView listGroupUser(Page page) throws Exception {
        ModelAndView mv = this.getModelAndView();
        PageData pd = this.getPageData();
        try {
            page.setPd(pd);
            List<PageData> groupUserList = activityGroupService.listPage(page); // 列出所有的团体成员

            mv.addObject("pd", pd);
            mv.addObject("page", page);
            mv.addObject("list", groupUserList);

            mv.setViewName("edu/activityGroup/group_list");
        } catch (Exception e) {
            logger.error(ErrorUtils.getErrorMessage(e, "去活动参与人列表异常!"));
        }
        return mv;
    }

    /**
     * 去详情和审核页面
     *
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/toSelect")
    public ModelAndView toSelect() throws Exception {
        ModelAndView mv = this.getModelAndView();
        PageData pd = this.getPageData();
        try {
            String currentPage = pd.getString("currentPage");
            String keywords = pd.getString("keywords");
            //查询
            pd = activityGroupService.findObjectById(pd);

            //封装参数
            pd.put("currentPage", currentPage);
            pd.put("keywords", keywords);
            pd.put("type", "1");
            mv.addObject("msg", "edit");
            mv.addObject("pd", pd);
            mv.setViewName("edu/activityGroup/group_edit");
        } catch (Exception e) {
            logger.error(ErrorUtils.getErrorMessage(e, "去活动团员详情或审核页面异常!"));
        }
        return mv;
    }

    /**
     * 审核
     *
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/check")
    @ResponseBody
    public Object check() throws Exception {
        PageData pd = this.getPageData();
        String msg = "";
        try {
            msg = "success";
            activityGroupService.check(pd);
        } catch (Exception e) {
            logger.error(ErrorUtils.getErrorMessage(e, "活动审核保存异常!"));
        }
        Map<String, String> map = new HashMap<String, String>();
        map.put("msg", msg);
        return AppUtil.returnObject(new PageData(), map);
    }

}
