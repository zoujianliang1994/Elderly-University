package com.zhimu.controller.manager.edu.teacherLesson;

import com.zhimu.commons.constant.Const;
import com.zhimu.commons.utils.*;
import com.zhimu.controller.manager.base.BaseController;
import com.zhimu.dao.entity.system.Page;
import com.zhimu.service.manager.edu.teachPlan.impl.TeachPlanService;
import com.zhimu.service.manager.edu.teacherLesson.impl.TeacherLessonService;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping(value = "/teacherLesson")
public class TeacherLessonController extends BaseController {

  @Resource(name = "teacherLessonService")
  private TeacherLessonService teacherLessonService;

  /**
   * 教师我的课程列表
   */
  @RequestMapping(value = "/list")
  public ModelAndView list() throws Exception {
    ModelAndView mv = this.getModelAndView();
    PageData pd = getPageData();
    try {
      String keywords = pd.getString("keywords"); // 检索条件
      if (null != keywords && !"".equals(keywords)) {
        pd.put("keywords", keywords.trim());
      }
      //获取当前登陆登陆老师的ID
      if (!StringUtils.isEmpty(getUserInfo().getUSER_ID())) {
        pd.put("teacher_id", getUserInfo().getUSER_ID());
      }
      List<PageData> varList = teacherLessonService.teacherLessonList(pd);
      JSONArray array = new JSONArray();
      JSONObject jsonObject;
      PageData info;
      for (int i = 0; i < varList.size(); i++) {
        info = varList.get(i);
        jsonObject = new JSONObject();
        jsonObject.put("week", info.get("week") + "");
        jsonObject.put("period", info.get("period") + "");
        jsonObject.put("kc_name", info.get("kc_name") + "");
        jsonObject.put("start_time", info.get("start_time") + "");
        jsonObject.put("end_time", info.get("end_time") + "");
        jsonObject.put("shcool_name", info.get("shcool_name") + "");
        jsonObject.put("classroom_name", info.get("classroom_name") + "");
        array.add(jsonObject);
      }
      mv.addObject("varList", varList);
      mv.addObject("data", array.toString());
      mv.addObject("pd", pd);
      mv.setViewName("edu/teacherLesson/teacherLesson_list");
    } catch (Exception e) {
      logger.error(ErrorUtils.getErrorMessage(e, "查询教师我的课程列表异常!"));
    }
    return mv;
  }


}
